// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dboperate.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// insert, delete and update
type InsDelUpdRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Price                float32  `protobuf:"fixed32,3,opt,name=price,proto3" json:"price,omitempty"`
	TypeId               int32    `protobuf:"varint,4,opt,name=typeId,proto3" json:"typeId,omitempty"`
	CreateTime           int64    `protobuf:"varint,5,opt,name=createTime,proto3" json:"createTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InsDelUpdRequest) Reset()         { *m = InsDelUpdRequest{} }
func (m *InsDelUpdRequest) String() string { return proto.CompactTextString(m) }
func (*InsDelUpdRequest) ProtoMessage()    {}
func (*InsDelUpdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e996fc68607adb, []int{0}
}

func (m *InsDelUpdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsDelUpdRequest.Unmarshal(m, b)
}
func (m *InsDelUpdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsDelUpdRequest.Marshal(b, m, deterministic)
}
func (m *InsDelUpdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsDelUpdRequest.Merge(m, src)
}
func (m *InsDelUpdRequest) XXX_Size() int {
	return xxx_messageInfo_InsDelUpdRequest.Size(m)
}
func (m *InsDelUpdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsDelUpdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsDelUpdRequest proto.InternalMessageInfo

func (m *InsDelUpdRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *InsDelUpdRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *InsDelUpdRequest) GetPrice() float32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *InsDelUpdRequest) GetTypeId() int32 {
	if m != nil {
		return m.TypeId
	}
	return 0
}

func (m *InsDelUpdRequest) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

// select
type SelectRequest struct {
	Columns              string   `protobuf:"bytes,1,opt,name=columns,proto3" json:"columns,omitempty"`
	Table                string   `protobuf:"bytes,2,opt,name=table,proto3" json:"table,omitempty"`
	Condition            string   `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SelectRequest) Reset()         { *m = SelectRequest{} }
func (m *SelectRequest) String() string { return proto.CompactTextString(m) }
func (*SelectRequest) ProtoMessage()    {}
func (*SelectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e996fc68607adb, []int{1}
}

func (m *SelectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SelectRequest.Unmarshal(m, b)
}
func (m *SelectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SelectRequest.Marshal(b, m, deterministic)
}
func (m *SelectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SelectRequest.Merge(m, src)
}
func (m *SelectRequest) XXX_Size() int {
	return xxx_messageInfo_SelectRequest.Size(m)
}
func (m *SelectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SelectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SelectRequest proto.InternalMessageInfo

func (m *SelectRequest) GetColumns() string {
	if m != nil {
		return m.Columns
	}
	return ""
}

func (m *SelectRequest) GetTable() string {
	if m != nil {
		return m.Table
	}
	return ""
}

func (m *SelectRequest) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

// execSql
type SqlRequest struct {
	Sql                  string   `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SqlRequest) Reset()         { *m = SqlRequest{} }
func (m *SqlRequest) String() string { return proto.CompactTextString(m) }
func (*SqlRequest) ProtoMessage()    {}
func (*SqlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e996fc68607adb, []int{2}
}

func (m *SqlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SqlRequest.Unmarshal(m, b)
}
func (m *SqlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SqlRequest.Marshal(b, m, deterministic)
}
func (m *SqlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SqlRequest.Merge(m, src)
}
func (m *SqlRequest) XXX_Size() int {
	return xxx_messageInfo_SqlRequest.Size(m)
}
func (m *SqlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SqlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SqlRequest proto.InternalMessageInfo

func (m *SqlRequest) GetSql() string {
	if m != nil {
		return m.Sql
	}
	return ""
}

// return
type Reply struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a2e996fc68607adb, []int{3}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*InsDelUpdRequest)(nil), "proto.insDelUpdRequest")
	proto.RegisterType((*SelectRequest)(nil), "proto.selectRequest")
	proto.RegisterType((*SqlRequest)(nil), "proto.sqlRequest")
	proto.RegisterType((*Reply)(nil), "proto.reply")
}

func init() { proto.RegisterFile("dboperate.proto", fileDescriptor_a2e996fc68607adb) }

var fileDescriptor_a2e996fc68607adb = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0x3f, 0x4f, 0xf3, 0x30,
	0x10, 0xc6, 0xdf, 0xa4, 0x4d, 0xaa, 0x9c, 0x5e, 0xa0, 0x58, 0x15, 0x44, 0x08, 0x95, 0x28, 0x53,
	0x06, 0x54, 0x09, 0xf8, 0x0a, 0x2c, 0x4c, 0x48, 0x06, 0x46, 0x86, 0x34, 0xbe, 0xc1, 0x92, 0x63,
	0x3b, 0xb6, 0x23, 0xd1, 0x15, 0xf1, 0xc1, 0x51, 0x1c, 0x87, 0x3f, 0x65, 0xea, 0xe4, 0x7b, 0xee,
	0xee, 0x39, 0x3f, 0xfa, 0xc1, 0x09, 0xdb, 0x2a, 0x8d, 0xa6, 0x76, 0xb8, 0xd1, 0x46, 0x39, 0x45,
	0x12, 0xff, 0x94, 0x1f, 0x11, 0x2c, 0xb9, 0xb4, 0xf7, 0x28, 0x5e, 0x34, 0xa3, 0xd8, 0xf5, 0x68,
	0x1d, 0x39, 0x86, 0x98, 0xb3, 0x3c, 0x2a, 0xa2, 0x2a, 0xa1, 0x31, 0x67, 0x84, 0xc0, 0x5c, 0xd6,
	0x2d, 0xe6, 0x71, 0x11, 0x55, 0x19, 0xf5, 0x35, 0x59, 0x41, 0xa2, 0x0d, 0x6f, 0x30, 0x9f, 0x15,
	0x51, 0x15, 0xd3, 0x51, 0x90, 0x33, 0x48, 0xdd, 0x4e, 0xe3, 0x03, 0xcb, 0xe7, 0xde, 0x1d, 0x14,
	0x59, 0x03, 0x34, 0x06, 0x6b, 0x87, 0xcf, 0xbc, 0xc5, 0x3c, 0x29, 0xa2, 0x6a, 0x46, 0x7f, 0x74,
	0xca, 0x57, 0x38, 0xb2, 0x28, 0xb0, 0x71, 0x53, 0x84, 0x1c, 0x16, 0x8d, 0x12, 0x7d, 0x2b, 0xad,
	0xcf, 0x91, 0xd1, 0x49, 0x0e, 0x1f, 0xbb, 0x7a, 0x2b, 0xa6, 0x34, 0xa3, 0x20, 0x97, 0x90, 0x35,
	0x4a, 0x32, 0xee, 0xb8, 0x92, 0x3e, 0x52, 0x46, 0xbf, 0x1b, 0xe5, 0x1a, 0xc0, 0x76, 0x62, 0xba,
	0xbd, 0x84, 0x99, 0xed, 0x44, 0xb8, 0x3b, 0x94, 0xe5, 0x15, 0x24, 0x06, 0xb5, 0xd8, 0x0d, 0xf9,
	0x0d, 0xda, 0x5e, 0xb8, 0x30, 0x0d, 0xea, 0xf6, 0x3d, 0x86, 0xec, 0xd1, 0xf3, 0xe3, 0x4a, 0x92,
	0x1b, 0x48, 0xb9, 0xb4, 0x68, 0x1c, 0x39, 0x1f, 0x69, 0x6e, 0xf6, 0x11, 0x5e, 0xfc, 0x0f, 0x03,
	0x7f, 0xb6, 0xfc, 0x37, 0x58, 0x18, 0x0a, 0x74, 0x78, 0x90, 0xa5, 0xd7, 0xac, 0x3e, 0xc4, 0xb2,
	0x81, 0x74, 0xc4, 0x48, 0x56, 0x61, 0xf2, 0x8b, 0xea, 0x9f, 0xfd, 0x6b, 0x58, 0xe0, 0x1b, 0x36,
	0x4f, 0x9d, 0x20, 0xa7, 0x93, 0xe1, 0x8b, 0xd3, 0xfe, 0xf6, 0x36, 0xf5, 0xf2, 0xee, 0x33, 0x00,
	0x00, 0xff, 0xff, 0x73, 0xa9, 0xc2, 0x21, 0x4c, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// OperationClient is the client API for Operation service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type OperationClient interface {
	// insert
	Insert(ctx context.Context, in *InsDelUpdRequest, opts ...grpc.CallOption) (*Reply, error)
	// delete
	Delete(ctx context.Context, in *InsDelUpdRequest, opts ...grpc.CallOption) (*Reply, error)
	// update
	Update(ctx context.Context, in *InsDelUpdRequest, opts ...grpc.CallOption) (*Reply, error)
	// select
	Select(ctx context.Context, in *SelectRequest, opts ...grpc.CallOption) (*Reply, error)
	// execute sql
	ExecSql(ctx context.Context, in *SqlRequest, opts ...grpc.CallOption) (*Reply, error)
}

type operationClient struct {
	cc grpc.ClientConnInterface
}

func NewOperationClient(cc grpc.ClientConnInterface) OperationClient {
	return &operationClient{cc}
}

func (c *operationClient) Insert(ctx context.Context, in *InsDelUpdRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.Operation/insert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationClient) Delete(ctx context.Context, in *InsDelUpdRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.Operation/delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationClient) Update(ctx context.Context, in *InsDelUpdRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.Operation/update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationClient) Select(ctx context.Context, in *SelectRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.Operation/select", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *operationClient) ExecSql(ctx context.Context, in *SqlRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/proto.Operation/execSql", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// OperationServer is the server API for Operation service.
type OperationServer interface {
	// insert
	Insert(context.Context, *InsDelUpdRequest) (*Reply, error)
	// delete
	Delete(context.Context, *InsDelUpdRequest) (*Reply, error)
	// update
	Update(context.Context, *InsDelUpdRequest) (*Reply, error)
	// select
	Select(context.Context, *SelectRequest) (*Reply, error)
	// execute sql
	ExecSql(context.Context, *SqlRequest) (*Reply, error)
}

// UnimplementedOperationServer can be embedded to have forward compatible implementations.
type UnimplementedOperationServer struct {
}

func (*UnimplementedOperationServer) Insert(ctx context.Context, req *InsDelUpdRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Insert not implemented")
}
func (*UnimplementedOperationServer) Delete(ctx context.Context, req *InsDelUpdRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedOperationServer) Update(ctx context.Context, req *InsDelUpdRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedOperationServer) Select(ctx context.Context, req *SelectRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Select not implemented")
}
func (*UnimplementedOperationServer) ExecSql(ctx context.Context, req *SqlRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecSql not implemented")
}

func RegisterOperationServer(s *grpc.Server, srv OperationServer) {
	s.RegisterService(&_Operation_serviceDesc, srv)
}

func _Operation_Insert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsDelUpdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServer).Insert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Operation/Insert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServer).Insert(ctx, req.(*InsDelUpdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operation_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsDelUpdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Operation/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServer).Delete(ctx, req.(*InsDelUpdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operation_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsDelUpdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Operation/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServer).Update(ctx, req.(*InsDelUpdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operation_Select_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SelectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServer).Select(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Operation/Select",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServer).Select(ctx, req.(*SelectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Operation_ExecSql_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SqlRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(OperationServer).ExecSql(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Operation/ExecSql",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(OperationServer).ExecSql(ctx, req.(*SqlRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Operation_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Operation",
	HandlerType: (*OperationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "insert",
			Handler:    _Operation_Insert_Handler,
		},
		{
			MethodName: "delete",
			Handler:    _Operation_Delete_Handler,
		},
		{
			MethodName: "update",
			Handler:    _Operation_Update_Handler,
		},
		{
			MethodName: "select",
			Handler:    _Operation_Select_Handler,
		},
		{
			MethodName: "execSql",
			Handler:    _Operation_ExecSql_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dboperate.proto",
}
